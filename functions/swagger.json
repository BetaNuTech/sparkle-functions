{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "SPARKLE API DOC",
    "description": "SPARKLE Project Application API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "tags": [
    {
      "name": "Jobs",
      "description": "API for jobs"
    },
    {
      "name": "Bids",
      "description": "API for bids"
    },
    {
      "name": "Integrations",
      "description": "API for integrations"
    },
    {
      "name": "Property",
      "description": "API for properties"
    },
    {
      "name": "Templates",
      "description": "API for templates"
    },
    {
      "name": "Template Categories",
      "description": "API for template categories"
    },
    {
      "name": "Inspection",
      "description": "API for inspections"
    },
    {
      "name": "Deficiencies",
      "description": "API for deficient items"
    },
    {
      "name": "Users",
      "description": "API for users"
    },
    {
      "name": "Teams",
      "description": "API for teams"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/vnd.api+json"],
  "paths": {
    "/v0/teams/": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Teams"],
        "summary": "Creating a new team. Only for admin users",
        "parameters": [
          {
            "name": "incognitoMode",
            "in": "query",
            "required": false,
            "description": "Manage request silently, without sending global notifications",
            "type": "string",
            "enum": ["true", "false"]
          },
          {
            "name": "team",
            "in": "body",
            "description": "team details",
            "required": ["name"],
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful team creation",
            "schema": {
              "$ref": "#/definitions/UPSERTTEAM"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS409"
            }
          }
        }
      }
    },
    "/v0/teams/{teamId}": {
      "parameters": [
        {
          "name": "teamId",
          "in": "path",
          "required": true,
          "description": "team id being updated.",
          "type": "string"
        },
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        }
      ],
      "patch": {
        "tags": ["Teams"],
        "summary": "Updating a team. Only for admin users",
        "parameters": [
          {
            "name": "incognitoMode",
            "in": "query",
            "required": false,
            "description": "Manage request silently, without sending global notifications",
            "type": "string",
            "enum": ["true", "false"]
          },
          {
            "name": "team",
            "in": "body",
            "description": "team details",
            "required": ["name"],
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful team update",
            "schema": {
              "$ref": "#/definitions/UPSERTTEAM"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS409"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      },
      "delete": {
        "tags": ["Teams"],
        "summary": "Deleting a team. Only for admin users",
        "parameters": [
          {
            "name": "incognitoMode",
            "in": "query",
            "required": false,
            "description": "Manage request silently, without sending global notifications",
            "type": "string",
            "enum": ["true", "false"]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful team delete, contains no payload or body"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS409"
            }
          }
        }
      }
    },
    "/v0/properties/{propertyId}/jobs": {
      "parameters": [
        {
          "name": "propertyId",
          "in": "path",
          "required": true,
          "description": "property id in which we want to create a job.",
          "type": "string"
        },
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Jobs"],
        "summary": "Creating a new job inside a property using the property id.",
        "parameters": [
          {
            "name": "job",
            "in": "body",
            "description": "job details",
            "required": ["title", "type"],
            "properties": {
              "title": {
                "type": "string"
              },
              "need": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": ["small:pm", "small:hybrid", "large:am", "large:sc"],
                "default": "small:pm"
              },
              "scopeOfWork": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful for creating job api",
            "schema": {
              "$ref": "#/definitions/JOBS"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          }
        }
      }
    },
    "/v0/properties/{propertyId}/jobs/{jobId}": {
      "parameters": [
        {
          "name": "propertyId",
          "in": "path",
          "required": true,
          "description": "property id in which we want to edit a job.",
          "type": "string"
        },
        {
          "name": "jobId",
          "in": "path",
          "required": true,
          "description": "job id which we want to update.",
          "type": "string"
        },
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        }
      ],
      "put": {
        "tags": ["Jobs"],
        "parameters": [
          {
            "name": "job",
            "in": "body",
            "description": "job details that needs to be updated",
            "required": ["title", "type"],
            "properties": {
              "title": {
                "type": "string"
              },
              "need": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": ["small:pm", "small:hybrid", "large:am", "large:sc"],
                "default": "small:pm"
              },
              "scopeOfWork": {
                "type": "string"
              },
              "authorizedRules": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "expediteReason": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success for creating job api",
            "schema": {
              "$ref": "#/definitions/JOBS"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },
    "/v0/properties/{propertyId}/jobs/{jobId}/bids/{bidId}": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "propertyId",
          "in": "path",
          "required": true,
          "description": "property id in which we want to edit a bid assigned to a job.",
          "type": "string"
        },
        {
          "name": "jobId",
          "in": "path",
          "required": true,
          "description": "job to which this bid belongs to.",
          "type": "string"
        },
        {
          "name": "bidId",
          "in": "path",
          "required": true,
          "description": "bidId id which we want to update.",
          "type": "string"
        }
      ],
      "put": {
        "tags": ["Bids"],
        "parameters": [
          {
            "name": "bid",
            "in": "body",
            "description": "Bid details that needs to be updated",
            "required": [
              "vendor",
              "vendorDetails",
              "costMax",
              "costMin",
              "startAt",
              "completeAt",
              "state",
              "vendorW9",
              "vendorInsurance",
              "vendorLicense"
            ],
            "properties": {
              "vendor": {
                "type": "string"
              },
              "vendorDetails": {
                "type": "string"
              },
              "costMax": {
                "type": "number"
              },
              "costMin": {
                "type": "number"
              },
              "startAt": {
                "type": "number"
              },
              "completeAt": {
                "type": "number"
              },
              "state": {
                "type": "string"
              },
              "vendorW9": {
                "type": "boolean"
              },
              "vendorInsurance": {
                "type": "boolean"
              },
              "vendorLicense": {
                "type": "boolean"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success for updating bid api",
            "schema": {
              "$ref": "#/definitions/BID"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },
    "/v0/properties/{propertyId}/jobs/{jobId}/bids": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "propertyId",
          "in": "path",
          "required": true,
          "description": "property id in which we want to edit a bid assigned to a job.",
          "type": "string"
        },
        {
          "name": "jobId",
          "in": "path",
          "required": true,
          "description": "job to which this bid belongs to.",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Bids"],
        "parameters": [
          {
            "name": "bid",
            "in": "body",
            "description": "Bid details that needs to be needed for new bid for a job.",
            "required": [
              "vendor",
              "vendorDetails",
              "costMax",
              "costMin",
              "startAt",
              "completeAt",
              "state",
              "vendorW9",
              "vendorInsurance",
              "vendorLicense"
            ],
            "properties": {
              "vendor": {
                "type": "string"
              },
              "vendorDetails": {
                "type": "string"
              },
              "costMax": {
                "type": "number"
              },
              "costMin": {
                "type": "number"
              },
              "startAt": {
                "type": "number"
              },
              "completeAt": {
                "type": "number"
              },
              "state": {
                "type": "string"
              },
              "vendorW9": {
                "type": "boolean"
              },
              "vendorInsurance": {
                "type": "boolean"
              },
              "vendorLicense": {
                "type": "boolean"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success for adding a new bid",
            "schema": {
              "$ref": "#/definitions/BID"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },
    "/v0/properties/{propertyId}/inspections": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "propertyId",
          "in": "path",
          "required": true,
          "description": "property id in which we want to create an inspection for.",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Inspection"],
        "parameters": [
          {
            "name": "inspection",
            "in": "body",
            "description": "inspection details that are needed for new inspection for a property.",
            "required": ["template"],
            "properties": {
              "template": {
                "type": "string",
                "description": "template details."
              }
            }
          }
        ],
        "responses": {
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/CREATEINSPECTION"
            }
          }
        }
      }
    },
    "/v0/properties/{propertyId}/yardi/residents": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "propertyId",
          "in": "path",
          "required": true,
          "description": "property id in which we want to edit a bid assigned to a job.",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Property"],
        "description": "Fetch all residents from the propertyId",
        "responses": {
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "407": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/RESIDENTS"
            }
          }
        }
      }
    },
    "/v0/properties": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Property"],
        "description": "Creating a new property",
        "parameters": [
          {
            "name": "incognitoMode",
            "in": "query",
            "required": false,
            "description": "Manage request silently, without sending global notifications",
            "type": "string",
            "enum": ["true", "false"]
          },
          {
            "name": "property",
            "in": "body",
            "required": ["name"],
            "properties": {
              "team": {
                "type": "string"
              },
              "templates": {
                "type": "object"
              },
              "num_of_units": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "loan_type": {
                "type": "string"
              },
              "maint_super_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "addr2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "addr1": {
                "type": "string"
              },
              "code": {
                "type": "string"
              },
              "manager_name": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              },
              "photoURL": {
                "type": "string"
              },
              "logoURL": {
                "type": "string"
              },
              "year_built": {
                "type": "number"
              },
              "slackChannel": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/PROPERTY"
            }
          }
        }
      }
    },
    "/v0/properties/{propertyId}/yardi/work-orders": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "propertyId",
          "in": "path",
          "required": true,
          "description": "property id in which we want to get worker orders.",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Property"],
        "responses": {
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "407": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/WORKORDER"
            }
          }
        }
      }
    },
    "/v0/properties/{propertyId}": {
      "parameters": [
        {
          "name": "propertyId",
          "in": "path",
          "required": true,
          "description": "property id in which we want to edit a property.",
          "type": "string"
        },
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        }
      ],
      "put": {
        "tags": ["Property"],
        "parameters": [
          {
            "name": "incognitoMode",
            "in": "query",
            "required": false,
            "description": "Manage request silently, without sending global notifications",
            "type": "string",
            "enum": ["true", "false"]
          },
          {
            "name": "property",
            "in": "body",
            "required": ["name"],
            "properties": {
              "team": {
                "type": "string"
              },
              "templates": {
                "type": "object"
              },
              "num_of_units": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "loan_type": {
                "type": "string"
              },
              "maint_super_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "addr2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "addr1": {
                "type": "string"
              },
              "code": {
                "type": "string"
              },
              "manager_name": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              },
              "photoURL": {
                "type": "string"
              },
              "logoURL": {
                "type": "string"
              },
              "year_built": {
                "type": "number"
              },
              "slackChannel": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success for creating property api",
            "schema": {
              "$ref": "#/definitions/PROPERTY"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },
    "/v0/properties/{propertyId}/jobs/{jobId}/trello": {
      "parameters": [
        {
          "name": "propertyId",
          "in": "path",
          "required": true,
          "description": "property id in which we want to edit a property.",
          "type": "string"
        },
        {
          "name": "jobId",
          "in": "path",
          "required": true,
          "description": "job id in which we want to create a trello card.",
          "type": "string"
        },
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Property"],
        "parameters": [
          {
            "name": "property",
            "in": "body",
            "required": [],
            "properties": {}
          }
        ],
        "responses": {
          "201": {
            "description": "Success for creating trello card.",
            "schema": {
              "$ref": "#/definitions/TRELLO"
            }
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS409"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },
    "/v0/integrations/slack/authorization": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Integrations"],
        "parameters": [
          {
            "name": "integration",
            "in": "body",
            "description": "Intregration payload.",
            "required": ["slackCode", "redirectUri"],
            "properties": {
              "slackCode": {
                "type": "string"
              },
              "redirectUri": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/GENERICJSONAPIDOC"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      },
      "patch": {
        "tags": ["Integrations"],
        "parameters": [
          {
            "name": "integration",
            "in": "body",
            "description": "Intregration update payload",
            "required": ["defaultChannelName"],
            "properties": {
              "defaultChannelName": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/GENERICJSONAPIDOC"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      },
      "delete": {
        "tags": ["Integrations"],
        "parameters": [
          {
            "name": "integration",
            "in": "body",
            "description": "Intregration payload.",
            "required": [],
            "properties": {}
          }
        ],
        "responses": {
          "204": {},
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },
    "/v0/integrations/slack/events": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Integrations"],
        "parameters": [
          {
            "name": "integration",
            "in": "body",
            "description": "Intregration Event payload.",
            "required": [],
            "properties": {
              "team_id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "event": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                }
              },
              "challenge": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CHALLENGE"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },
    "/v0/integrations/trello/authorization": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Integrations"],
        "parameters": [
          {
            "name": "integration",
            "in": "body",
            "description": "Intregration trello payload.",
            "required": ["apiKey", "authToken"],
            "properties": {
              "apiKey": {
                "type": "string"
              },
              "authToken": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/INTEGRATIONSUCCESS"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      },
      "delete": {
        "tags": ["Integrations"],
        "parameters": [
          {
            "name": "integration",
            "in": "body",
            "description": "Intregration trello delete payload.",
            "required": [],
            "properties": {}
          }
        ],
        "responses": {
          "204": {
            "type": "object"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },
    "/v0/integrations/trello/boards": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Integrations"],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TRELLOBOARD"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },
    "/v0/integrations/trello/boards/{boardId}/lists": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "boardId",
          "in": "path",
          "required": true,
          "description": "board id.",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Integrations"],
        "responses": {
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/TRELLOBOARDLIST"
            }
          }
        }
      }
    },
    "/v0/inspections/{inspectionId}": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "inspectionId",
          "in": "path",
          "required": true,
          "description": "inspection id.",
          "type": "string"
        }
      ],
      "patch": {
        "tags": ["Inspection"],
        "parameters": [
          {
            "name": "incognitoMode",
            "in": "query",
            "required": false,
            "description": "Manage request silently, without sending global notifications",
            "type": "string",
            "enum": ["true", "false"]
          },
          {
            "name": "integration",
            "in": "body",
            "description": "Change inspection property relationship to reassign inspection to a new property",
            "required": ["property"],
            "properties": {
              "property": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/RESPONSE"
            }
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/RESPONSE"
            }
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/RESPONSE"
            }
          }
        }
      }
    },
    "/v0/inspections/{inspectionId}/report-pdf": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "inspectionId",
          "in": "path",
          "required": true,
          "description": "inspection id.",
          "type": "string"
        }
      ],
      "patch": {
        "tags": ["Inspection"],
        "parameters": [
          {
            "name": "incognitoMode",
            "in": "query",
            "required": false,
            "description": "Manage request silently, without sending global notifications",
            "type": "string",
            "enum": ["true", "false"]
          },
          {
            "name": "integration",
            "in": "body",
            "description": "Inspection report PDF update.",
            "required": [],
            "properties": {}
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/REPORTPDFRESPONSE200"
            }
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/REPORTPDFRESPONSE"
            }
          },
          "202": {
            "schema": {
              "$ref": "#/definitions/REPORTPDFRESPONSE"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },
    "/v0/inspections/{inspection}/pdf-report": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "inspection",
          "in": "path",
          "required": true,
          "description": "inspection id.",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Integrations"],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PDFREPORTRESPONSE"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/RESPONSE"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/RESPONSE"
            }
          },
          "304": {
            "type": "object",
            "properties": {}
          }
        }
      }
    },
    "/v0/inspections/{inspectionId}/template": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "inspectionId",
          "in": "path",
          "required": true,
          "description": "inspection id.",
          "type": "string"
        }
      ],
      "patch": {
        "tags": ["Inspection"],
        "parameters": [
          {
            "name": "incognitoMode",
            "in": "query",
            "required": false,
            "description": "Manage request silently, without sending global notifications",
            "type": "string",
            "enum": ["true", "false"]
          },
          {
            "name": "integration",
            "in": "body",
            "description": "Inspection updating",
            "required": [],
            "properties": {}
          }
        ],
        "responses": {
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "204": {},
          "201": {
            "schema": {
              "$ref": "#/definitions/CREATEINSPECTION"
            }
          }
        }
      }
    },
    "/v0/inspections/{inspectionId}/template/items/{itemId}/image": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "inspectionId",
          "in": "path",
          "required": true,
          "description": "inspection id.",
          "type": "string"
        },
        {
          "name": "itemId",
          "in": "path",
          "required": true,
          "description": "inspection item id.",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Inspection"],
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "type": "file",
            "required": true,
            "description": "File that we need to upload to the inspection item's photos"
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/GENERICFILEUPLOADSUCCESS"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },
    "/v0/inspections/latest-completed": {
      "parameters": [
        {
          "name": "before",
          "in": "query",
          "required": false,
          "description": "before value.",
          "type": "string"
        },
        {
          "name": "propertyCode",
          "in": "query",
          "required": false,
          "description": "propertyCode.",
          "type": "string"
        },
        {
          "name": "templateName",
          "in": "query",
          "required": false,
          "description": "templateName.",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Inspection"],
        "responses": {
          "400": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/LATESTSUCCESS"
            }
          }
        }
      }
    },
    "/v0/properties/{propertyId}/image": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "propertyId",
          "in": "path",
          "required": true,
          "description": "property id in which we want to upload an image.",
          "type": "string"
        },
        {
          "name": "target",
          "in": "query",
          "required": true,
          "description": "flag mentioning type of image upload, logo or profile.",
          "type": "string",
          "enum": ["logo", "profile"]
        }
      ],
      "post": {
        "tags": ["Property"],
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "type": "file",
            "required": true,
            "description": "File that we need to upload to the property"
          }
        ],
        "responses": {
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/PROPERTYIMGUPLOADSUCCESS"
            }
          }
        }
      }
    },
    "/v0/templates": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Templates"],
        "summary": "Creating or cloning a new template.  Only Admin/Corporate users",
        "parameters": [
          {
            "name": "clone",
            "in": "path",
            "required": true,
            "description": "Existing template identifier to clone",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful template creation",
            "schema": {
              "$ref": "#/definitions/UPSERTTEMPLATE"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },
    "/v0/templates/{templateId}": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "inspectionId",
          "in": "path",
          "required": true,
          "description": "inspection id.",
          "type": "string"
        }
      ],
      "patch": {
        "tags": ["Templates"],
        "summary": "Update a template. Only for admin or corporate users",
        "parameters": [
          {
            "name": "incognitoMode",
            "in": "query",
            "required": false,
            "description": "Manage request silently, without sending global notifications",
            "type": "string",
            "enum": ["true", "false"]
          }
        ],
        "responses": {
          "201": {
            "description": "Successful template update, payload contains updates",
            "schema": {
              "$ref": "#/definitions/UPSERTTEMPLATE"
            }
          },
          "204": {
            "description": "Successful update, that had no impact on template"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      },
      "delete": {
        "tags": ["Templates"],
        "summary": "Deleting a template. Only for admin users",
        "parameters": [
          {
            "name": "incognitoMode",
            "in": "query",
            "required": false,
            "description": "Manage request silently, without sending global notifications",
            "type": "string",
            "enum": ["true", "false"]
          }
        ],
        "responses": {
          "204": {
            "description": "Successful template delete, contains no payload or body"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },
    "/v0/template-categories": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Template Categories"],
        "summary": "Creating a new template category. Only for admin or corporate users",
        "parameters": [
          {
            "name": "incognitoMode",
            "in": "query",
            "required": false,
            "description": "Manage request silently, without sending global notifications",
            "type": "string",
            "enum": ["true", "false"]
          },
          {
            "name": "payload",
            "in": "body",
            "description": "template category details",
            "required": ["name"],
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful template category creation",
            "schema": {
              "$ref": "#/definitions/UPSERTTEMPLATECATEGORY"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS409"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },
    "/v0/teams/{templateCategoryId}": {
      "parameters": [
        {
          "name": "templateCategoryId",
          "in": "path",
          "required": true,
          "description": "template category id being deleted or updated.",
          "type": "string"
        },
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        }
      ],
      "patch": {
        "tags": ["Template Categories"],
        "summary": "Updating a template category. Only for admin or corporate users",
        "parameters": [
          {
            "name": "incognitoMode",
            "in": "query",
            "required": false,
            "description": "Manage request silently, without sending global notifications",
            "type": "string",
            "enum": ["true", "false"]
          },
          {
            "name": "payload",
            "in": "body",
            "description": "template category details",
            "required": ["name"],
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful template category update",
            "schema": {
              "$ref": "#/definitions/UPSERTTEMPLATECATEGORY"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS409"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      },
      "delete": {
        "tags": ["Template Categories"],
        "summary": "Deleting a template category. Only for admin and corporate users",
        "parameters": [
          {
            "name": "incognitoMode",
            "in": "query",
            "required": false,
            "description": "Manage request silently, without sending global notifications",
            "type": "string",
            "enum": ["true", "false"]
          }
        ],
        "responses": {
          "204": {
            "description": "Successful template category delete, contains no payload or body"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },

    "/v0/deficiencies/{deficiencyId}/trello/card": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "deficiencyId",
          "in": "path",
          "required": true,
          "description": "deficiency id.",
          "type": "string"
        },
        {
          "name": "notify",
          "in": "query",
          "required": false,
          "description": "Flag requesting API to manage global notifications of update",
          "type": "string",
          "enum": ["true", "false"]
        }
      ],
      "post": {
        "tags": ["Deficiencies"],
        "parameters": [
          {
            "name": "incognitoMode",
            "in": "query",
            "required": false,
            "description": "Manage request silently, without sending global notifications",
            "type": "string",
            "enum": ["true", "false"]
          },
          {
            "name": "deficient",
            "in": "body",
            "description": "Deficienies payload.",
            "required": [],
            "properties": {}
          }
        ],
        "responses": {
          "409": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/DEFICIENT"
            }
          }
        }
      }
    },
    "/v0/deficiencies/{deficiencyId}/image": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "deficiencyId",
          "in": "path",
          "required": true,
          "description": "deficiency id.",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Deficiencies"],
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "type": "file",
            "required": true,
            "description": "File that we need to upload to the deficient item's photos"
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/GENERICFILEUPLOADSUCCESS"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },
    "/v0/deficiencies": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "id",
          "in": "query",
          "required": true,
          "description": "Deficient Item ids to \"batch\" apply update payload to",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "notify",
          "in": "query",
          "required": false,
          "description": "Flag requesting API to manage global notifications of update",
          "type": "string",
          "enum": ["true", "false"]
        }
      ],
      "put": {
        "tags": ["Deficiencies"],
        "parameters": [
          {
            "name": "incognitoMode",
            "in": "query",
            "required": false,
            "description": "Manage request silently, without sending global notifications",
            "type": "string",
            "enum": ["true", "false"]
          },
          {
            "name": "deficient",
            "in": "body",
            "description": "Deficienies payload.",
            "required": [],
            "properties": {
              "currentStartDate": {
                "type": "number"
              },
              "currentDueDate": {
                "type": "number"
              },
              "state": {
                "type": "string"
              },
              "currentPlanToFix": {
                "type": "string"
              },
              "currentResponsibilityGroup": {
                "type": "string"
              },
              "progressNote": {
                "type": "string"
              },
              "currentDeferredDate": {
                "type": "number"
              },
              "currentReasonIncomplete": {
                "type": "string"
              },
              "currentReasonIncomplete": {
                "type": "string"
              },
              "currentCompleteNowReason": {
                "type": "string"
              },
              "isDuplicate": {
                "type": "boolean"
              },
              "willRequireProgressNote": {
                "type": "boolean"
              },
              "completedPhotos": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "createdAt": { "type": "number" },
                    "startDate": { "type": "number" },
                    "caption": { "type": "string" },
                    "user": { "type": "string" },
                    "downloadURL": { "type": "string" },
                    "storageDBPath": { "type": "string" }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/DEFICIENTUPDATE"
            }
          }
        }
      }
    },
    "/v0/users": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Users"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "users",
            "in": "body",
            "required": ["firstName", "lastName", "email"],
            "properties": {
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/USER"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },
    "/v0/users/{userId}": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "user id to update a specific user.",
          "type": "string"
        }
      ],
      "patch": {
        "tags": ["Users"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "incognitoMode",
            "in": "query",
            "required": false,
            "description": "Manage request silently, without sending global notifications",
            "type": "string",
            "enum": ["true", "false"]
          },
          {
            "name": "user",
            "in": "body",
            "required": [],
            "properties": {
              "superAdmin": {
                "type": "boolean"
              },
              "admin": {
                "type": "boolean"
              },
              "corporate": {
                "type": "boolean"
              },
              "isDisabled": {
                "type": "boolean"
              },
              "teams": {
                "type": "object",
                "properties": {}
              },
              "properties": {
                "type": "object",
                "properties": {}
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "pushOptOut": {
                "type": "boolean"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/USER"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "consumes": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DELETEUSER"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BID": {
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "createdAt": {
                  "type": "number"
                },
                "updatedAt": {
                  "type": "number"
                },
                "completeAt": {
                  "type": "number"
                },
                "startAt": {
                  "type": "number"
                },
                "costMax": {
                  "type": "number"
                },
                "costMin": {
                  "type": "number"
                },
                "state": {
                  "type": "string"
                },
                "vendor": {
                  "type": "string"
                },
                "vendorDetails": {
                  "type": "string"
                },
                "scope": {
                  "type": "string"
                },
                "vendorW9": {
                  "type": "boolean"
                },
                "vendorInsurance": {
                  "type": "boolean"
                },
                "vendorLicense": {
                  "type": "boolean"
                }
              }
            },
            "relationships": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "JOBS": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "need": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "scopeOfWork": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "authorizedRules": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "number"
                },
                "updatedAt": {
                  "type": "number"
                },
                "minBids": {
                  "type": "number"
                },
                "expediteReason": {
                  "type": "string"
                }
              }
            },
            "relationships": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "PROPERTY": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "team": {
                  "type": "string"
                },
                "templates": {
                  "type": "object"
                },
                "num_of_units": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "loan_type": {
                  "type": "string"
                },
                "maint_super_name": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "addr2": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "addr1": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "manager_name": {
                  "type": "string"
                },
                "zip": {
                  "type": "string"
                },
                "photoURL": {
                  "type": "string"
                },
                "logoURL": {
                  "type": "string"
                },
                "year_built": {
                  "type": "number"
                },
                "id": {
                  "type": "string"
                },
                "slackChannel": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "BADSTATUS400": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "source": {
                "type": "object",
                "properties": {
                  "pointer": {
                    "type": "string"
                  }
                }
              },
              "title": {
                "type": "string"
              },
              "detail": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "BADSTATUS404": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "source": {
                "type": "object",
                "properties": {
                  "pointer": {
                    "type": "string"
                  },
                  "enum": ["property", "job", "bid"]
                }
              },
              "title": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "BADSTATUS409": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "source": {
                "type": "object",
                "properties": {
                  "pointer": {
                    "type": "string"
                  }
                }
              },
              "title": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "UNAUTH": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "source": {
                "type": "object",
                "properties": {
                  "pointer": {
                    "type": "string"
                  },
                  "enum": ["authorizedRules", "state"]
                }
              },
              "detail": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ERROR": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "detail": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "UPSERTTEAM": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "team": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "UPSERTTEMPLATE": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "number"
                },
                "updatedAt": {
                  "type": "number"
                },
                "trackDeficientItems": {
                  "type": "boolean"
                },
                "requireDeficientItemNoteAndPhoto": {
                  "type": "boolean"
                },
                "sections": {
                  "type": "object"
                },
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "UPSERTTEMPLATECATEGORY": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "CREATEINSPECTION": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "template": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "requireDeficientItemNoteAndPhoto": {
                      "type": "boolean"
                    },
                    "trackDeficientItems": {
                      "type": "boolean"
                    },
                    "sections": {
                      "type": "object"
                    },
                    "items": {
                      "type": "object"
                    },
                    "properties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "templateId": {
                  "type": "string"
                },
                "property": {
                  "type": "string"
                },
                "inspectorName": {
                  "type": "string"
                },
                "inspector": {
                  "type": "string"
                },
                "totalItems": {
                  "type": "number"
                },
                "templateName": {
                  "type": "string"
                },
                "itemsCompleted": {
                  "type": "number"
                },
                "inspectionCompleted": {
                  "type": "boolean"
                },
                "completionDate": {
                  "type": "number"
                },
                "deficienciesExist": {
                  "type": "boolean"
                },
                "score": {
                  "type": "number"
                },
                "createdAt": {
                  "type": "number"
                },
                "creationDate": {
                  "type": "number"
                },
                "updatedLastDate": {
                  "type": "number"
                },
                "updatedAt": {
                  "type": "number"
                },
                "templateCategory": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "RESIDENTS": {
      "type": "object",
      "properties": {
        "meta": {
          "type": "object",
          "properties": {}
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {}
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "occupants": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "included": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {}
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "resident": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "WORKORDER": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {}
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "resident": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "TRELLO": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "updatedAt": {
                  "type": "number"
                },
                "trelloCardURL": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "INTEGRATIONSUCCESS": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "grantedBy": {
                  "type": "string"
                },
                "team": {
                  "type": "string"
                },
                "teamName": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "number"
                },
                "member": {
                  "type": "string"
                },
                "trelloFullName": {
                  "type": "string"
                },
                "trelloUsername": {
                  "type": "string"
                },
                "closedBoard": {
                  "type": "string"
                },
                "closedBoardName": {
                  "type": "string"
                },
                "closedList": {
                  "type": "string"
                },
                "closedListName": {
                  "type": "string"
                },
                "openBoard": {
                  "type": "string"
                },
                "openBoardName": {
                  "type": "string"
                },
                "openList": {
                  "type": "string"
                },
                "openListName": {
                  "type": "string"
                },
                "yardiEntity": {
                  "type": "string"
                },
                "yardiUserName": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "CHALLENGE": {
      "type": "object",
      "properties": {
        "challenge": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "TRELLOBOARD": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "trelloOrganization": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "included": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "TRELLOBOARDLIST": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "board": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "RESPONSE": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "REPORTPDFRESPONSE": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "inspectionReportStatus": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "REPORTPDFRESPONSE200": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "inspectionReportURL": {
                  "type": "string"
                },
                "inspectionReportStatus": {
                  "type": "string"
                },
                "inspectionReportUpdateLastDate": {
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "PDFREPORTRESPONSE": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "PDFREPORTRESPONSE200": {
      "type": "object",
      "properties": {
        "inspectionReportURL": {
          "type": "string"
        }
      }
    },
    "LATESTSUCCESS": {
      "type": "object",
      "properties": {
        "included": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "lastInspectionDate": {
                    "type": "number"
                  },
                  "lastInspectionScore": {
                    "type": "number"
                  },
                  "numOfInspections": {
                    "type": "number"
                  },
                  "numOfDeficientItems": {
                    "type": "number"
                  },
                  "numOfOverdueDeficientItems": {
                    "type": "number"
                  },
                  "numOfRequiredActionsForDeficientItems": {
                    "type": "number"
                  },
                  "numOfFollowUpActionsForDeficientItems": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "creationDate": {
                    "type": "number"
                  },
                  "completionDate": {
                    "type": "number"
                  },
                  "score": {
                    "type": "string"
                  },
                  "templateName": {
                    "type": "string"
                  },
                  "inspectionReportURL": {
                    "type": "string"
                  },
                  "inspectionURL": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "PROPERTYIMGUPLOADSUCCESS": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "logoURL": {
                  "type": "string"
                },
                "logoName": {
                  "type": "string"
                },
                "bannerPhotoURL": {
                  "type": "string"
                },
                "bannerPhotoName": {
                  "type": "string"
                },
                "photoURL": {
                  "type": "string"
                },
                "photoName": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "GENERICFILEUPLOADSUCCESS": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "downloadURL": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "DEFICIENT": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "data": {
              "type": "object",
              "properties": {
                "shortUrl": {
                  "type": "string"
                }
              }
            }
          }
        },
        "relationships": {
          "type": "object",
          "properties": {
            "deficiency": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "DEFICIENTUPDATE": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {}
        },
        "meta": {
          "type": "object",
          "properties": {
            "warnings": {
              "type": "array",
              "items": {}
            }
          }
        }
      }
    },
    "USER": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "admin": {
                  "type": "boolean"
                },
                "corporate": {
                  "type": "boolean"
                },
                "isDisabled": {
                  "type": "boolean"
                },
                "pushOptOut": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "DELETEUSER": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "GENERICJSONAPIDOC": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "attributes": {
          "type": "object"
        }
      }
    }
  }
}
