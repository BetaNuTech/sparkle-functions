{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "SPARKLE API DOC",
    "description": "SPARKLE Project Application API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "tags": [
    {
      "name": "Jobs",
      "description": "API for jobs"
    },
    {
      "name": "Bids",
      "description": "API for bids"
    },
    {
      "name": "Property",
      "description": "API for property"
    },
    {
      "name": "Inspection",
      "description": "Api for inspection"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/vnd.api+json"
  ],
  "paths": {
    "/v0/properties/{propertyId}/jobs": {
      "parameters": [
        {
          "name": "propertyId",
          "in": "path",
          "required": true,
          "description": "property id in which we want to create a job.",
          "type": "string"
        },
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        }
      ],
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Creating a new job inside a property using the property id.",
        "parameters": [
          {
            "name": "job",
            "in": "body",
            "description": "job details",
            "required": [
              "title",
              "type"
            ],
            "properties": {
              "title": {
                "type": "string"
              },
              "need": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "improvement",
                  "maintenance"
                ],
                "default": "improvement"
              },
              "scopeOfWork": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success for creating job api",
            "schema": {
              "$ref": "#/definitions/JOBS"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          }
        }
      }
    },
    "/v0/properties/{propertyId}/jobs/{jobId}": {
      "parameters": [
        {
          "name": "propertyId",
          "in": "path",
          "required": true,
          "description": "property id in which we want to edit a job.",
          "type": "string"
        },
        {
          "name": "jobId",
          "in": "path",
          "required": true,
          "description": "job id which we want to update.",
          "type": "string"
        },
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        }
      ],
      "put": {
        "tags": [
          "Jobs"
        ],
        "parameters": [
          {
            "name": "job",
            "in": "body",
            "description": "job details that needs to be updated",
            "required": [
              "title",
              "type"
            ],
            "properties": {
              "title": {
                "type": "string"
              },
              "need": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "improvement",
                  "maintenance"
                ],
                "default": "improvement"
              },
              "scopeOfWork": {
                "type": "string"
              },
              "authorizedRules": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success for creating job api",
            "schema": {
              "$ref": "#/definitions/JOBS"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },
    "/v0/properties/{propertyId}/jobs/{jobId}/bids/{bidId}": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "propertyId",
          "in": "path",
          "required": true,
          "description": "property id in which we want to edit a bid assigned to a job.",
          "type": "string"
        },
        {
          "name": "jobId",
          "in": "path",
          "required": true,
          "description": "job to which this bid belongs to.",
          "type": "string"
        },
        {
          "name": "bidId",
          "in": "path",
          "required": true,
          "description": "bidId id which we want to update.",
          "type": "string"
        }
      ],
      "put": {
        "tags": [
          "Bids"
        ],
        "parameters": [
          {
            "name": "bid",
            "in": "body",
            "description": "Bid details that needs to be updated",
            "required": [
              "vendor",
              "vendorDetails",
              "costMax",
              "costMin",
              "startAt",
              "completeAt",
              "state"
            ],
            "properties": {
              "vendor": {
                "type": "string"
              },
              "vendorDetails": {
                "type": "string"
              },
              "costMax": {
                "type": "number"
              },
              "costMin": {
                "type": "number"
              },
              "startAt": {
                "type": "number"
              },
              "completeAt": {
                "type": "number"
              },
              "state": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success for updating bid api",
            "schema": {
              "$ref": "#/definitions/JOBS"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },
    "/v0/properties/{propertyId}/jobs/{jobId}/bids": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "propertyId",
          "in": "path",
          "required": true,
          "description": "property id in which we want to edit a bid assigned to a job.",
          "type": "string"
        },
        {
          "name": "jobId",
          "in": "path",
          "required": true,
          "description": "job to which this bid belongs to.",
          "type": "string"
        }
      ],
      "post": {
        "tags": [
          "Bids"
        ],
        "parameters": [
          {
            "name": "bid",
            "in": "body",
            "description": "Bid details that needs to be needed for new bid for a job.",
            "required": [
              "vendor",
              "vendorDetails",
              "costMax",
              "costMin",
              "startAt",
              "completeAt",
              "state"
            ],
            "properties": {
              "vendor": {
                "type": "string"
              },
              "vendorDetails": {
                "type": "string"
              },
              "costMax": {
                "type": "number"
              },
              "costMin": {
                "type": "number"
              },
              "startAt": {
                "type": "number"
              },
              "completeAt": {
                "type": "number"
              },
              "state": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success for adding a new bid",
            "schema": {
              "$ref": "#/definitions/JOBS"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },
    "/v0/properties/{propertyId}/inspections": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "propertyId",
          "in": "path",
          "required": true,
          "description": "property id in which we want to create an inspection for.",
          "type": "string"
        }
      ],
      "post": {
        "tags": [
          "Inspection"
        ],
        "parameters": [
          {
            "name": "inspection",
            "in": "body",
            "description": "inspection details that are needed for new inspection for a property.",
            "required": [
              "template",
              "property"
            ],
            "properties": {
              "template": {
                "type": "string",
                "description": "template details."
              },
              "property": {
                "type": "string",
                "description": "property details."
              }
            }
          }
        ],
        "responses": {
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/CREATEINSPECTION"
            }
          }
        }
      }
    },
    "/v0/properties/{propertyId}/yardi/residents": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "propertyId",
          "in": "path",
          "required": true,
          "description": "property id in which we want to edit a bid assigned to a job.",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Property"
        ],
        "description": "Fetch all residents from the propertyId",
        "responses": {
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "407": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/RESIDENTS"
            }
          }
        }
      }
    },
    "/v0/properties": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        }
      ],
      "post": {
        "tags": [
          "Property"
        ],
        "description": "Creating a new property",
        "parameters": [
          {
            "name": "property",
            "in": "body",
            "required": [
              "name"
            ],
            "properties": {
              "team": {
                "type": "string"
              },
              "templates": {
                "type": "object"
              },
              "num_of_units": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "loan_type": {
                "type": "string"
              },
              "maint_super_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "addr2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "addr1": {
                "type": "string"
              },
              "code": {
                "type": "string"
              },
              "manager_name": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              },
              "photoURL": {
                "type": "string"
              },
              "logoURL": {
                "type": "string"
              },
              "year_built": {
                "type": "number"
              },
              "slackChannel": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/PROPERTY"
            }
          }
        }
      }
    },
    "/v0/properties/{propertyId}/yardi/work-orders": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        },
        {
          "name": "propertyId",
          "in": "path",
          "required": true,
          "description": "property id in which we want to get worker orders.",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Property"
        ],
        "responses": {
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "407": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/WORKORDER"
            }
          }
        }
      }
    },
    "/v0/properties/{propertyId}": {
      "parameters": [
        {
          "name": "propertyId",
          "in": "path",
          "required": true,
          "description": "property id in which we want to edit a property.",
          "type": "string"
        },
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        }
      ],
      "put": {
        "tags": [
          "Property"
        ],
        "parameters": [
          {
            "name": "property",
            "in": "body",
            "required": [
              "name"
            ],
            "properties": {
              "team": {
                "type": "string"
              },
              "templates": {
                "type": "object"
              },
              "num_of_units": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "loan_type": {
                "type": "string"
              },
              "maint_super_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "addr2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "addr1": {
                "type": "string"
              },
              "code": {
                "type": "string"
              },
              "manager_name": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              },
              "photoURL": {
                "type": "string"
              },
              "logoURL": {
                "type": "string"
              },
              "year_built": {
                "type": "number"
              },
              "slackChannel": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success for creating property api",
            "schema": {
              "$ref": "#/definitions/PROPERTY"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS400"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    },
    "/v0/properties/{propertyId}/jobs/{jobId}/trello": {
      "parameters": [
        {
          "name": "propertyId",
          "in": "path",
          "required": true,
          "description": "property id in which we want to edit a property.",
          "type": "string"
        },
        {
          "name": "jobId",
          "in": "path",
          "required": true,
          "description": "job id in which we want to create a trello card.",
          "type": "string"
        },
        {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Authorization token.",
          "type": "string"
        }
      ],
      "post": {
        "tags": [
          "Property"
        ],
        "parameters": [
          {
            "name": "property",
            "in": "body",
            "required": [],
            "properties": {}
          }
        ],
        "responses": {
          "201": {
            "description": "Success for creating trello card.",
            "schema": {
              "$ref": "#/definitions/TRELLO"
            }
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS409"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/BADSTATUS404"
            }
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/UNAUTH"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/ERROR"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "JOBS": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "need": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "scopeOfWork": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "authorizedRules": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "number"
                },
                "updatedAt": {
                  "type": "number"
                }
              }
            },
            "relationships": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "PROPERTY": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "team": {
                  "type": "string"
                },
                "templates": {
                  "type": "object"
                },
                "num_of_units": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "loan_type": {
                  "type": "string"
                },
                "maint_super_name": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "addr2": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "addr1": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "manager_name": {
                  "type": "string"
                },
                "zip": {
                  "type": "string"
                },
                "photoURL": {
                  "type": "string"
                },
                "logoURL": {
                  "type": "string"
                },
                "year_built": {
                  "type": "number"
                },
                "id": {
                  "type": "string"
                },
                "slackChannel": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "BADSTATUS400": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "source": {
                "type": "object",
                "properties": {
                  "pointer": {
                    "type": "string"
                  }
                }
              },
              "title": {
                "type": "string"
              },
              "detail": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "BADSTATUS404": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "source": {
                "type": "object",
                "properties": {
                  "pointer": {
                    "type": "string"
                  },
                  "enum": [
                    "property",
                    "job",
                    "bid"
                  ]
                }
              },
              "title": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "BADSTATUS409": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "source": {
                "type": "object",
                "properties": {
                  "pointer": {
                    "type": "string"
                  }
                }
              },
              "title": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "UNAUTH": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "source": {
                "type": "object",
                "properties": {
                  "pointer": {
                    "type": "string"
                  },
                  "enum": [
                    "authorizedRules",
                    "state"
                  ]
                }
              },
              "detail": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ERROR": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "detail": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "CREATEINSPECTION": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "property": {
              "type": "string"
            },
            "template": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "requireDeficientItemNoteAndPhoto": {
                  "type": "boolean"
                },
                "trackDeficientItems": {
                  "type": "boolean"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "properties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "sections": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            },
            "templateId": {
              "type": "string"
            },
            "inspectorName": {
              "type": "string"
            },
            "inspector": {
              "type": "string"
            }
          }
        }
      }
    },
    "RESIDENTS": {
      "type": "object",
      "properties": {
        "meta": {
          "type": "object",
          "properties": {}
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {}
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "occupants": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "included": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {}
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "resident": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "WORKORDER": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {}
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "resident": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "TRELLO": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "updatedAt": {
                  "type": "number"
                },
                "trelloCardURL": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}